---
import { ContextActions } from "@/components/context-actions";
import { ContextTags } from "@/components/context-tags";
import { marked } from "marked";
import { authorImage, AuthorName } from "@/db/postHelpers";
import { getFrontmatter, splitFrontmatter } from "@/lib/utils";

interface Props {
  post: {
    id: number;
    title: string | null;
    description: string | null;
    content: string;
    authorId: string;
    attributedGitHubUser: string | null;
    urn: string | null;
    slug: string;
    tags: string[] | null;
    author: {
      id: string;
      name: string;
      image: string | null;
      githubUserName: string | null;
    } | null;
  };
}

const { post } = Astro.props;
const { frontmatterString, content } = splitFrontmatter(post.content);
const frontmatterStringWithFences =
  frontmatterString.length > 0 ? `---\n${frontmatterString}\n---` : null;
const html = marked(content);
---

<div class="sticky top-0">
  <div class="max-w-3xl mx-auto px-4 space-y-2 border-b border-border">
    <div class="bg-background md:border-x border-border py-4 md:px-8 md:py-6">
      <div class="flex justify-between">
        <div class="pr-4">
          <h1 class="text-xl lg:text-2xl font-medium tracking-tight">
            {post.title}
          </h1>
          <p class="text-muted-foreground max-w-md mb-2.5 mt-2">
            {post.description}
          </p>
        </div>
        <div class="md:block">
          <ContextActions
            context={{
              id: post.id,
              slug: post.slug,
              attributedGitHubUser: post.attributedGitHubUser,
              title: post.title || "",
              description: post.description || "",
              tags: post.tags || [],
              author: post.author,
              urn: post.urn,
              data: {
                title: post.title || "",
                description: post.description || "",
                tags: post.tags || [],
              },
              body: post.content,
            }}
            client:load
          />
        </div>
      </div>
      <div class="flex items-center justify-between">
        <div class="flex items-center gap-2">
          <img src={authorImage(post)} class="size-5 rounded-sm" />
          <p class="text-muted-foreground text-sm">
            <AuthorName post={post} client:load />
          </p>
        </div>
        <ContextTags tags={post.tags || []} />
      </div>
    </div>
  </div>
</div>
<div class="border-b border-border px-4 max-w-3xl mx-auto">
  <div class="border-border border-x p-4 md:p-8">
    <div
      class="prose max-w-3xl
      prose-markdown
        dark:prose-invert
        font-mono
        text-sm
        prose-th:text-xs
        prose-headings:text-base
        prose-headings:font-bold
        prose-code:text-sm
        prose-code:border-border
        prose-inline-code:border
        prose-inline-code:rounded
        prose-inline-code:px-1
        prose-inline-code:py-px
        prose-inline-code:font-medium
        prose-pre:bg-background
        prose-pre:text-foreground
        prose-pre:border
        prose-pre:border-border
        prose-li:my-1
        prose-li:pl-3
        prose-ul:pl-2
        prose-ul:marker:text-foreground
        prose-ul:list-(--dash-list-marker)"
    >
      {
        frontmatterStringWithFences && (
          <pre class="p-0 border-none">{frontmatterStringWithFences}</pre>
        )
      }
      <div set:html={html} />
    </div>
  </div>
</div>

---
import { cn } from "@/lib/utils";
import { ContextList } from "./context-list";
import { SidebarIntro, Header } from "@/components/sidebar-utils";
import type { CollectionEntry } from "astro:content";

const { contexts, selectedContext } = Astro.props;
const sortedContexts = contexts.sort(
  (a: CollectionEntry<"contexts">, b: CollectionEntry<"contexts">) => {
    const bumpDiff = (b.data.bump || 0) - (a.data.bump || 0);
    if (bumpDiff === 0) {
      return a.data.title?.localeCompare(b.data.title ?? "") || 0;
    }
    return bumpDiff;
  },
);
---

<div
  class={cn(
    "w-full md:w-[400px] flex flex-col",
    selectedContext && "hidden md:flex",
  )}
>
  <div class="sticky top-0 z-10 bg-sidebar border-r border-border border-b-2">
    <Header client:idle />
    <SidebarIntro />
  </div>
  <div class="flex-grow overflow-y-hidden" id="sidebar-scrollable">
    <ContextList
      contexts={sortedContexts}
      selectedId={selectedContext?.id}
      client:load
    />
  </div>
</div>

<script is:inline>
  const restoreScroll = () => {
    const pos = sessionStorage.getItem("sidebarScroll");
    const scrollable = document.querySelector("#sidebar-scrollable");
    if (scrollable) {
      if (pos) {
        scrollable.scrollTop = parseInt(pos);
      }
      scrollable.classList.remove("overflow-y-hidden");
      scrollable.classList.add("overflow-y-auto");

      scrollable.addEventListener("scroll", () => {
        sessionStorage.setItem(
          "sidebarScroll",
          scrollable.scrollTop.toString(),
        );
      });
    }
  };

  (function () {
    restoreScroll();
    document.addEventListener("astro:after-swap", restoreScroll);
  })();
</script>

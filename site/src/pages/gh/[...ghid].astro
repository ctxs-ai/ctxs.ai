---
import type { GetStaticPaths } from "astro";
import Layout from "@/layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import Page from "@/components/Page.astro";

export const getStaticPaths = (async () => {
  const contexts = await getCollection("contexts");

  return contexts.map((c) => ({
    params: { ghid: c.id },
    props: { contexts: contexts, selectedContext: c },
  }));
}) satisfies GetStaticPaths;

const contexts = Astro.props.contexts;
const selectedContext = Astro.props.selectedContext;
const author = selectedContext.id.split("/")[0];

const params = {
  id: "z8ifmj2f4v28327",
  title: selectedContext.data.title || "",
  desc: selectedContext.data.description || "",
  avatar: `https://github.com/${author}.png`,
  handle: `@${author}`,
};

const queryString = new URLSearchParams(params).toString();
const ogImage = `https://dynogee.com/gen?${queryString}`;
const meta = {
  title: `${selectedContext.data.title} - ctxs.ai`,
  description: selectedContext.data.description,
  ogImage: ogImage,
};

Astro.response.headers.set("Cache-Control", "public, max-age=3600");
---

<Layout meta={meta}>
  <Page contexts={contexts} selectedContext={selectedContext} />
</Layout>

name: pnpm based Deploy Web App

on: [push, pull_request]

jobs:
  # run-tests:
  #   name: Run app tests
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 5
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Use Node.js 20.x
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20.x
  #     - run: node -v
  #     - run: corepack enable
  #     - name: Cache ~/.m2
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.m2
  #         key: ${{ runner.os }}-m2-${{ hashFiles('shadow-cljs.edn') }}
  #     - uses: oven-sh/setup-bun@v1
  #     - run: bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)
  #     - run: "curl -L https://github.com/pocketbase/pocketbase/releases/download/v0.22.6/pocketbase_0.22.6_linux_amd64.zip -o /tmp/pb.zip"
  #     - run: unzip /tmp/pb.zip -d /tmp/pb/
  #     - run: cp /tmp/pb/pocketbase /usr/local/bin
  #     - run: yarn install
  #     - run: yarn playwright install
  #     - run: bb release --include-test-utils
  #     - run: bb tests-run

  fly-deploy:
    name: Deploy app to Fly.io
    defaults:
      run:
        working-directory: ./site
    runs-on: ubuntu-latest
    # needs: run-tests
    # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    concurrency: deploy-app # optional: ensure only one action runs at a time
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm -r build

      # - uses: superfly/flyctl-actions/setup-flyctl@master
      #   env:
      #     FLY_API_TOKEN: ${{ secrets.APP_FLY_API_TOKEN }}
      # - run: flyctl deploy --remote-only
      #   env:
      #     FLY_API_TOKEN: ${{ secrets.APP_FLY_API_TOKEN }}

      # - name: Send pushover notification
      #   run: |
      #     curl -s \
      #     --form-string "token=${{ secrets.PUSHOVER_TOKEN }}" \
      #     --form-string "user=${{ secrets.PUSHOVER_USER }}" \
      #     --form-string "message=ctxs: deploy completed." \
      #     https://api.pushover.net/1/messages.json
